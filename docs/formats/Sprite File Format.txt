
Sprite files are located in the /so/ folder, have a p_ prefix, followed by the file path version of the entity's name, and have the .dat extension.
Example: /so/p_zombi.dat

Bytes 00-03: Magic bytes, always 0xBEEFF00D.
Bytes 04-07: 0x40.
Bytes 08-0B: Offset within this file to the start of the list of hitboxes.
Bytes 0C-0F: Offset within this file to the start of the list of the sprite's frames.
Bytes 10-13: Offset within this file to the start of the list of frame delays. This list doesn't exist for enemies like Golem, so the pointer is just 0 in that case.
Bytes 14-17: Offset within this file to the start of the list of animations. This list doesn't exist for enemies like Golem, so the pointer is just 0 in that case.
Bytes 18-1B: 0x00.
Bytes 1C-1F: 0x00.
Bytes 20-23: Offset within this file to the start of the file footer.
Bytes 24-27: Number of frames this sprite has.
Bytes 28-2B: Number of animations this sprite has.
Bytes 2C-2F: Length of this file in bytes.
Bytes 30-3F: 0x00.

Bytes 40+: List of sprite parts.
Each part is 16 bytes long.
  Bytes 1-2: x offset. positive means offset backwards, negative means offset forward.
  Bytes 3-4: y offset. positive means offset downwards, negative means offset upwards.
  Bytes 5-6: x pos in pixels for where in the gfx file to look for this part.
  Bytes 7-8: y pos in pixels for where in the gfx file to look for this part.
  Bytes 9-10: Width of this part in pixels.
  Bytes 11-12: Height of this part in pixels.
  Byte 13: Enemy gfx page index to use.
  Byte 14: Flip bits.
    Least significant bit first.
    Bit 1: Vertical flip
    Bit 2: Horizontal flip.
    Bits 3-8: Unused?
  Byte 15: Palette index to use.
  Byte 16: 0x00.

List of sprite frames:
Each frame is 12 bytes long.
  Bytes 1-2: ??
  Byte 3: 1 if this frame has a hitbox, 0 if it doesn't.
  Byte 4: The number of parts this frame has.
  Bytes 5-8: Pointer to the part to use. Multiple of 0x10 since each part is 0x10 bytes long. These pointers are relative to the start of the part list initially (meaning 0 refers to the first part). But at runtime, the game replaces these relative pointers to ram pointers after 1 frame, presumably as a performance optimization.
  Bytes 9-12: Pointer to the hitbox to use. Multiple of 0x08 since each hitbox is 0x08 bytes long.

List of frame delays:
Each frame delay is 8 bytes long.
This list doesn't exist for enemies like Golem.
  Bytes 1-2: Frame index to use.
  Bytes 3-4: Delay (in frames) for this frame to be displayed.
  Bytes 5-8: Unknown. Normally 0, sometimes 0x40.

List of animations:
Each entry is 8 bytes long.
This list doesn't exist for enemies like Golem.
  Bytes 1-4: Number of frames this animation has.
  Bytes 5-8: Pointer to the first frame delay for this animation, relative to the start of the list of frame delays. Meaning 0x00 is the first frame delay, 0x08 is the second frame delay, etc. (At runtime the game engine converts this to a ram pointer, probably as a performance optimization.)

File footer:
  Bytes 1-2: Number of frames this sprite has, duplicate of 0x24 in the header.
  Bytes 3-4: Number of animations this sprite has, duplicate of 0x28 in the header.
  Bytes 5-8: Length of this file in bytes, duplicate of 0x2C in the header.
  Bytes 9-12: Can either be the length of this file in bytes, or just 0.
  Bytes 13-end of file: All 0.
